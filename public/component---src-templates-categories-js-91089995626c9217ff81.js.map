{"version":3,"sources":["webpack:///./src/components/categoryimage.js","webpack:///./src/components/CategoryCard.js","webpack:///./src/components/PostCard.js","webpack:///./src/components/BlogMenu.js","webpack:///./src/templates/categories.js"],"names":["Wrapper","styled","figure","props","image","useStaticQuery","allFile","edges","find","n","node","relativePath","includes","filename","imageFluid","childImageSharp","fluid","alt","className","div","CategoryCard","name","category","site","siteMetadata","categories","cat","to","slug","key","article","Postcard","tags","map","e","toLowerCase","title","dangerouslySetInnerHTML","__html","description","excerpt","date","BlogMenu","CategoryPageTemplate","data","pageContext","location","posts","allMarkdownRemark","url","pathname","style","marginBottom","fontSize","textAlign","frontmatter","fields","pageQuery"],"mappings":"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","file":"component---src-templates-categories-js-91089995626c9217ff81.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\"\n\nconst Wrapper = styled.figure`\n.category-img{\n  width:80px;\n  height:80px;\n  @media screen and (max-width: 780px) {\n    width:50px;\n    height:50px;\n  }\n}\n`\nexport default props => {\n  const catImages = useStaticQuery(graphql`\n    query {\n      allFile(\n        filter: {\n          extension: {eq: \"png\"},\n          sourceInstanceName: {eq: \"assets\"}\n        })\n      {\n        edges {\n          node {\n            name\n            relativePath\n            childImageSharp {\n              fluid(maxWidth: 800) {\n                ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n  const image = catImages.allFile.edges.find(n => {\n    return n.node.relativePath.includes(props.filename)\n  });\n  if (!image) { return null }\n  const imageFluid = image.node.childImageSharp.fluid\n  return (\n    <Wrapper>\n      <Img\n        fluid={imageFluid}\n        alt={props.alt}\n        className=\"category-img\"\n      />\n    </Wrapper>\n  )\n}","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\nimport Image from \"../components/categoryimage\"\n\nconst Wrapper = styled.div`\n  text-align:center;\n  a{\n    text-transform:uppercase;\n    text-decoration:none;\n    .category-text{\n      color:var(--gray);\n      font-size:0.6rem;\n      letter-spacing:0;\n    }\n  }\n`\n\nconst CategoryCard = ({name}) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            categories {\n              name\n              slug\n              image\n            }\n          }\n        }\n      }\n    `\n  )\n  const category = site.siteMetadata.categories.find((cat) => cat.name === name)\n  return (\n    <Wrapper>\n        <Link to={`/category/${category.slug}`}\n          key={category.name} >\n          <Image filename={category.image} alt={category.name}/>\n          <span className=\"category-text pc\">{category.name}</span>\n        </Link>\n    </Wrapper>\n  )\n}\nexport default CategoryCard","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport Category from \"../components/CategoryCard\"\n\nconst Wrapper = styled.article`\n  margin-bottom: var(--smallMargin);\n  padding-bottom: var(--smallMargin);\n  border-bottom: 1px dashed var(--lightGray);\n  &:last-child {\n    border-bottom: none;\n  }\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  .left{\n    padding:10px 30px;\n  }\n  .right{\n    width:100%;\n  }\n  h3{\n    font-size: 1.1rem;\n    padding-bottom: 15px;\n    a{\n      text-decoration:none;\n    }\n  }\n  .info {\n    display: flex;\n    justify-content: space-between;\n    color: var(--primary);\n  }\n  p {\n    line-height: 1.8;\n    padding-bottom: 20px;\n    font-size: 1rem;\n  }\n  @media screen and (max-width: 780px) {\n    .left{\n      padding: 10px;\n    }\n    .info {\n      flex-direction: column;\n      .date {\n        margin-bottom: 10px;\n      }\n    }\n  }\n  .tag{\n    font-size:0.8rem;\n    color: var(--primary);\n    border: 1px solid var(--primary);\n    border-radius: 5px;\n    padding: 3px 5px;\n    text-decoration:none;\n    margin-right:10px;\n    &:before{\n      content: '#';\n    }\n    &:hover{\n      background-color: var(--primary);\n      color: var(--white);\n    }\n  }\n`\n\nconst Postcard = props => {\n  const tags = props.tags\n      ? (props.tags.map(e => (\n            <Link to={`/tags/${e}/`.toLowerCase()} className=\"tag\" key={e}>\n              {e}\n            </Link>\n          )))\n      : \"\"\n\n  return (\n    <Wrapper key={props.slug}>\n    <div className=\"left\">\n      <Category name= {props.category}/>\n    </div>\n    <div className=\"right\">\n      <h3>\n          <Link to={props.slug}>\n            {props.title}\n          </Link>\n      </h3>\n      <section className=\"pc\">\n        <p\n          dangerouslySetInnerHTML={{\n            __html: props.description || props.excerpt,\n          }}\n        />\n      </section>\n      <div className=\"info\">\n        <small className=\"date\">{props.date}</small>\n        <div>{tags}</div>\n      </div>\n    </div>\n    </Wrapper>\n  )\n}\nexport default Postcard","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\";\n\nconst Wrapper = styled.div`\n    margin-top: 1rem;\n    padding: 1rem 0;\n\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    justify-content:center;\n\n    div{\n      width: 30%;\n      margin-top: var(--smallMargin);;\n      margin-bottom: var(--smallMargin);;\n      padding: 0 auto;\n      font-family: 'Montserrat', sans-serif;\n        a{\n          text-decoration:none;\n        }\n    }\n    ul{\n      margin-top: 10px;\n      border-left: 1px solid var(--secondary);\n      padding-left: 30px;\n      li{\n        padding:8px;\n      }\n    }\n    @media screen and (max-width: 780px) {\n      flex-direction :column;\n      div{\n        width: 100%;\n      }\n    }\n  }\n`\nconst BlogMenu = () => {\n  return (\n    <Wrapper className=\"container\">\n      <div>\n        <p><Link to =\"/category/programming/\">Programming</Link></p>\n        <ul>\n          <li><Link to =\"/tags/html/\">HTML</Link></li>\n          <li><Link to =\"/tags/css/\">CSS</Link></li>\n          <li><Link to =\"/tags/javascript/\">JavaScript</Link></li>\n          <li><Link to =\"/category/wordpress/\">WordPress</Link></li>\n          <li><Link to =\"/tags/gatsby/\">Gatsby</Link></li>\n          <li><Link to =\"/tags/git/\">git</Link></li>\n        </ul>\n      </div>\n      <div>\n        <p><Link to =\"/category/design/\">Design</Link></p>\n        <ul>\n          <li><Link to =\"/tags/illustrator/\">illustrator</Link></li>\n          <li><Link to =\"/tags/デザイン独学/\">デザイン独学</Link></li>\n        </ul>\n      </div>\n      <div>\n        <p><Link to =\"/category/column/\">Column</Link></p>\n        <ul>\n          <li><Link to =\"/tags/活動記録/\">活動記録</Link></li>\n          <li><Link to =\"/tags/journal/\">Journal</Link></li>\n          <li><Link to =\"/tags/私の愛用品/\">私の愛用品</Link></li>\n        </ul>\n      </div>\n    </Wrapper>\n    )\n}\nexport default BlogMenu\n","import React from \"react\"\nimport { graphql} from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/SEO\"\nimport Postcard from \"../components/PostCard\"\nimport BlogMenu from \"../components/BlogMenu\"\n\nconst CategoryPageTemplate = ({ data, pageContext, location }) => {\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout>\n      <SEO\n        title=\"Category\"\n        url ={location.pathname}\n       />\n       <h1\n          style={{\n            marginBottom: 60,\n            fontSize: 24,\n            textAlign: `center`,\n          }}\n      >Category : { pageContext.category }</h1>\n       <div className=\"container\"\n         style={{\n            marginBottom: 100,\n          }}\n        >\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <Postcard\n            key = {node.fields.slug}\n            title = {title}\n            category = {pageContext.category}\n            slug = {node.fields.slug}\n            date = {node.frontmatter.date}\n            description = {node.frontmatter.description}\n            excerpt = {node.excerpt}\n            tags = {node.frontmatter.tags}\n          />\n        )\n      })}\n      </div>\n      <BlogMenu />\n    </Layout>\n  )\n}\nexport default CategoryPageTemplate\n\nexport const pageQuery = graphql`\nquery CategoryPageQuery($category: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: {\n        fields: {collection: {eq: \"blog\"}}\n        frontmatter: {\n          status: { ne: \"draft\" }\n          category: { in: [$category] }\n        }\n      }\n      sort: { fields: [frontmatter___date], order: DESC })\n      {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            category\n            tags\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}